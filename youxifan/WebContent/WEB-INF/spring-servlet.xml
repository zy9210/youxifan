<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">
       

	
      
      
      
      
      
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 简写：  <mvc:annotation-driven />  
		<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	-->
	<mvc:annotation-driven />  
	  
	<!-- 把标记了@Controller注解的类转换为bean  -->
	<!-- 自动扫描所有注解该路径   --> 
	<context:component-scan base-package="com.youxifan.controller,com.youxifan.service" />

<!--   静态资源chuli
	<mvc:default-servlet-handler/>
	<mvc:resources mapping="/images/**" location="/images/" />
-->	
	<mvc:default-servlet-handler/>

	<mvc:view-controller path="/" view-name="login" /> 
	
	
	
	
	

	<!--  
		好像是根据请求头来决定用什么viewResolver    
		但是<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">的级别比这个高  上面设置了这个会无效
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
	    <property name="order" value="1" />  
	    <property name="mediaTypes">  
	        <map>  
	            <entry key="json" value="application/json" />  
	        </map>  
	    </property>  
	    <property name="defaultViews">  
	        <list>  
	            <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />  
	        </list>  
	    </property>  
	    <property name="ignoreAcceptHeader" value="true" />  
	</bean> 
	
	-->
	
	



	<!-- org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter --> 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
	    <property name="messageConverters">  
	        <list>  
	            <ref bean="mappingJacksonHttpMessageConverter"/>   
	        </list>  
	    </property>  
	</bean>  
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>  
	            <value>text/html;charset=UTF-8</value>  
	        </list>  
	    </property>  
	</bean> 
	<!-- 实际上通过setSupportedMediaTypes方法，其实也就是StringHttpMessageConverter在类注释 中说明的
      	-->
	<bean id="StringConverter1" class="org.springframework.http.converter.StringHttpMessageConverter">    
		<property name="supportedMediaTypes">    
			<list>  
				<value>text/plain;charset=UTF-8</value>  
			</list>    
		</property>    
	</bean>  
	<!-- 
		如果再多看一下StringHttpMessageConverter的源码，可以到它的父类中AbstractHttpMessageConverter有这么个方法： 
		protected MediaType getDefaultContentType(T t) {  
		       List<MediaType> mediaTypes = getSupportedMediaTypes();  
		       return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null);  
		   }   
	 --> 	
	<bean id="myStringHttpMessageConverter" class="com.youxifan.utils.MyStringHttpMessageConverter" />  
      
	            
	            
	            
	            
	            
	            

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/jsp/" p:suffix=".jsp" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" />

	<!--  这个同上 可能 是处理文件上传的
		<bean id="multipartResolver"  
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
		<property name="defaultEncoding" value="UTF-8" />   
		<property name="uploadTempDir" value="resources/attach/temp" />   
		</bean> 
	-->
</beans>